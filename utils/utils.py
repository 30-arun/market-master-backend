from django.conf import settings
from django.core.mail import send_mail
from store_app.models import Domain
import subprocess
import sys

def generate_ssl(domain):
    """
    Generate or renew an SSL certificate for a domain using Certbot.
    """
    try:
        custom_domains = Domain.objects.exclude(custom_domain__isnull=True).exclude(custom_domain='').values_list('custom_domain', flat=True)
        custom_domains_list = list(custom_domains)
        expanded_domains_list = custom_domains_list + [f'www.{domain}' for domain in custom_domains_list]
        all_custom_domains_list = f'*.marketmaster.me,marketmaster.me,' + ','.join(expanded_domains_list) + f',{domain},www.{domain}'
        # Run Certbot command for generating SSL
        certbot_cmd = [
            'sudo', 'certbot', 'certonly', '--nginx', 
            '--non-interactive', '--agree-tos', '--email', 'maskedman9817@gmail.com', 
            '--redirect', '--expand', '--domains', all_custom_domains_list , '--cert-name', 'abc'
        ]
        update_nginx(domain, server_name=True)
        subprocess.run(certbot_cmd, check=True)
        print(f"SSL certificate generated for {domain}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"Failed to generate SSL certificate for {domain}: {e}", file=sys.stderr)
        return None

def update_nginx(domain, server_name=True):
    """
    Update Nginx configuration for a domain using a Bash script.
    """
    try:
        # Paths for SSL certificates generated by Certbot
        ssl_cert = f'/etc/letsencrypt/live/{domain}/fullchain.pem'
        ssl_key = f'/etc/letsencrypt/live/{domain}/privkey.pem'
        config_file = '/home/ubuntu/update_server_name.sh' if server_name else './update_domain_config.sh'

        # Command to run the Bash script
        update_script_cmd = [
            'sudo', config_file, domain
        ]
        subprocess.run(update_script_cmd, check=True)
        print(f"Nginx configuration updated for {domain}")
    except subprocess.CalledProcessError as e:
        print(f"Failed to update Nginx configuration for {domain}: {e}", file=sys.stderr)
        return None


def send_mail_test(email, token='abc'):
    subject = 'Your forget password link'
    message = f'Hi , '
    email_from = settings.EMAIL_SENDER
    recipient_list = [email]
    print(444,email_from,email,token)
    send_mail(subject, message, email_from, recipient_list, fail_silently=False)
    print(33)
    return True